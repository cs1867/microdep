# Dockerfile to build perfSONAR  toolkit node
# To build, cd to folder and run
#
#     docker build --build-arg -t perfsonar-toolkit ."
#
# To run container with systemd operative in none-priviledge mode (may not work...)  
#   docker run -d --tmpfs /tmp --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro --net=host --name perfsonar-toolkit --rm perfsonar-toolkit
#
# ... or in privilede-mode
#   docker run -d --privileged --net=host --name perfsonar-toolkit --rm perfsonar-toolkit
#
# Apply pipeworks to give container its own dhcp address (set TYPE to relevant variant):
#
#    TYPE='toolkit|testpoint' && \
#    docker run -d --privileged --net=none --name perfsonar-${TYPE} --rm perfsonar-${TYPE} && \
#    sudo ~/pipework/pipework eth0 perfsonar-${TYPE} dhclient-f U:${TYPE} && \
#    docker exec -it perfsonar-${TYPE} ifconfig eth1 
#

FROM perfsonar-in-container_testpoint:latest
MAINTAINER Otto J Wittner <wittner@uninett.no>

# Install management packages
ENV DEBIAN_FRONTEND=noninteractive

# Install full perfsonar suit
#RUN apt-get --download-only --no-install-recommends -y install perfsonar-toolkit
RUN apt-get -y install --reinstall postgresql && apt-get --no-install-recommends -y install perfsonar-toolkit
#### THINGS STOP HERE SINCE POSTGRESQL SEVER IS NOT RUNNING... 
COPY etc/perfsonar-toolkit/lsregistrationdaemon.conf /etc/perfsonar/lsregistrationdaemon.conf
# Set management gui user/password to admin/notadminnono
RUN htpasswd -b /etc/perfsonar/toolkit/psadmin.htpasswd admin notadminnono
# Add default tests
COPY empty-file-do-not-remove *etc/perfsonar-$TYPE/psconfig/pscheduler.d/toolkit-webui.json /etc/perfsonar/psconfig/pscheduler.d/

EXPOSE 80
EXPOSE 443

# Run systemd as in "parent"-image
CMD ["/lib/systemd/systemd"]
