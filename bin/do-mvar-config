#!/bin/bash
#
# Generate rude config files
#
# Note the script assumes the following folder structure
#
# <root-folder> ---bin                   Binary files
#                |-<mvar-name> --- etc   Measurement varant server config files
#                               |- mp    Measurement varant client config files

MVAR=mp-dragonlab
ROOTDIR=/var/lib/microdep
PORT=3100
BIN=$ROOTDIR/bin
STARTTIME="tomorrow 0"
RUDECONF="yes"
function usage {
    echo "Usage: `basename $0` [-hs] [-b binary-folder] [-m mvar-name] [-r root-folder] [-d start-time] [port-number]"
    echo "Default port-number is $port."
    echo "-b path-to-binaries       Path to folder holding binaries. Default is $BIN."
    echo "-r root-folder            Measurement system root folder. Default is $ROOTDIR. "
    echo "-m mvar-name              Measurement variant name. Default is $MVAR."
    echo "-d timestamp              Timestamp readable by 'date -d' saying when generated config is valied from. Default is \"$STARTTIMES\"."
    echo "-s                        Skip generating rude configurations."
    echo "-h                        Help message."
    exit 1;
}

# Parse arguments
while getopts ":b:d:r:m:hs" opt; do
    case $opt in
	b)
	    BIN=$OPTARG
	    ;;
	d)
	    STARTTIME="$OPTARG"
	    ;;
	r)
	    ROOTDIR=$OPTARG
	    ;;
	m)
	    MVAR=$OPTARG
	    ;;
	s)
	    RUDECONF=""
	    ;;
	h)
	    echo "Generate rude config files.";
	    usage
	    ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
	    exit 1
	    ;;
	:)
	    echo "Option -$OPTARG requires an argument." >&2
	    exit 1
	    ;;
    esac
done
shift $(($OPTIND - 1))  # (Shift away parsed arguments)

if test  $# -gt 0 ; then
    PORT=$1
fi

#dir=$ROOTDIR/$index
#cd $dir/mp

error=""
for f in $ROOTDIR/$MVAR/etc/mp-names.txt $ROOTDIR/$MVAR/etc/rude-list.cfg $ROOTDIR/$MVAR/etc/rude-extra.cfg; do
    if [ ! -e $f ]; then
	echo "Error: Measuremenet config file $f missing." >&2
	error=yes
    fi
done
if test "$error"; then exit 1; fi

if [ $RUDECONF ]; then
    # Make configs for each client node relevant for measurement variant topology
    $BIN/rude-config-maker --index $MVAR --list $ROOTDIR/$MVAR/etc/mp-names.txt --rude_start $PORT -output_root $ROOTDIR/$MVAR/etc $ROOTDIR/$MVAR/etc/rude-list.cfg $ROOTDIR/$MVAR/etc/rude-extra.cfg
fi

# Update the config database with client node list
$BIN/microdep-config-load --db $ROOTDIR/$MVAR/etc/microdep.db -u $MVAR $ROOTDIR/$MVAR/etc/mp-names.txt

# Update the config database with client flow topology
$BIN/microdep-config-peers --start-time $(date --date "$STARTTIME" +%s) -db $ROOTDIR/$MVAR/etc/microdep.db $ROOTDIR/$MVAR/etc/rude-list.cfg $ROOTDIR/$MVAR/etc/rude-extra.cfg

